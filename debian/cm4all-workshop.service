[Unit]
Description=CM4all Workshop
Wants=network-online.target
After=network-online.target
After=postgresql.service

# the spawn daemon provides services for our spawner
Wants=cm4all-spawn-accessory.socket
After=cm4all-spawn-accessory.socket

# the spawn-reaper cleans up empty cgroups
Wants=cm4all-spawn-reaper.service

# require at least Linux kernel 5.12
AssertKernelVersion=>=5.12

[Service]
Type=notify
ExecStart=/usr/sbin/cm4all-workshop
KillMode=process
ExecReload=/bin/kill -HUP $MAINPID
Restart=on-failure
RestartPreventExitStatus=USAGE CONFIG

User=cm4all-workshop

WatchdogSec=2m

# Allow reading protected configuration files (with database
# passwords).
AmbientCapabilities=CAP_DAC_READ_SEARCH

# Allow the spawner to write cgroup files
AmbientCapabilities=CAP_DAC_OVERRIDE

# For spawner initalization to chown cgroup.procs to itself, which is
# necessary if we are running in a non-root user namespace (e.g. in a
# container)
AmbientCapabilities=CAP_CHOWN

# The spawner needs this during initialization to be able to set the
# set-group-ID bit on the cgroup
AmbientCapabilities=CAP_FSETID

# Needed by the spawner
AmbientCapabilities=CAP_SETUID CAP_SETGID CAP_KILL
#TODO: check CAP_SYS_NICE CAP_SYS_PTRACE CAP_SYS_RESOURCE

# The spawner needs this sledge hammer for setns() (and for other
# things that could probably be fixed)
AmbientCapabilities=CAP_SYS_ADMIN

# For the CAP_SYS_RESOURCE spawner option
AmbientCapabilities=CAP_SYS_RESOURCE

CPUSchedulingPolicy=batch
RestrictRealtime=yes
TimerSlackNSec=1s

# enable crash dumps
LimitCORE=infinity

[Install]
Alias=workshop.service
WantedBy=multi-user.target
